#
# A couple of useful guides & docs:
#
# - Main Bitrise CLI docs: https://github.com/bitrise-io/bitrise/tree/master/_docs
# - Step Development Guideline: https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
# - Bitrise.yml format spec: https://github.com/bitrise-io/bitrise/blob/master/_docs/bitrise-yml-format-spec.md
# - Bitrise docs: http://devcenter.bitrise.io/
# - Bitrise CLI guides: http://devcenter.bitrise.io/bitrise-cli/

title: Powershell Script
summary: Runs a Powershell script
description: Runs a Powershell script on macOS, Linux or Windows
website: https://github.com/mike-bitrise/bitrise-step-powershell-script
source_code_url: https://github.com/mike-bitrise/bitrise-step-powershell-script
support_url: https://github.com/mike-bitrise/bitrise-step-powershell-script/issues

type_tags:
  - utility

toolkit:
  powershell:
    entry_file: step.ps1

host_os_tags:
  - osx
  - ubuntu
  - windows

inputs:
  - content: |
      # Write your Powershell script here
      $ver = $PSVersionTable.PSVersion.ToString()
      echo "Running on Powershell version $ver"

    opts:
      title: "Script content"
      summary: Summary. No more than 2-3 sentences.
      description: |
        Type your script here.
        
        **Make sure that it returns a non zero exit code in case of an error!**
        The step will only fail if your script returns with a non zero exit code!
      is_expand: false
      is_required: true

  - runner_bin: ""
    opts:
      category: Config
      title: "Execute with / runner binary"
      description: |
        The executor to be used for running the script.
        If it's available in the PATH you can just
        specify `ruby` or `python`, generally
        if you know the path of the executor you should
        define that, like `C:\Windows\System32\cmd.exe`.

        You can even specify an execution command
        like `go run` instead of just a binary.

  - working_dir: "$BITRISE_SOURCE_DIR"
    opts:
      category: Config
      title: "Working directory"
      description: |
        This directory will be set as the current working
        directory for the script.

        Any relative path in the Script (content) will be
        relative to this directory.

  - script_file_path: ""
    opts:
      category: Config
      title: "Script file path"
      description: |
        Save the specified script content to this path
        before execution. The file will be removed after
        the script finishes.

        Generally you don't have to define this but
        there might be cases where the file's name or path
        actually matters.
        For example `go run` only accepts `.go` files.

        If you specify a relative path then it will be
        relative to the *working directory* (which you
        can optionally specify as well).
  - is_debug: "no"
    opts:
      category: Debug
      title: "Debug print?"
      description: |
        If debug=yes the step will print debug infos about
        the working dir, tmp file path, exit code, etc.
      value_options:
        - "no"
        - "yes"